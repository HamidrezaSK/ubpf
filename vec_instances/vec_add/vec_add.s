
vec_add.o:	file format elf64-bpf

Disassembly of section .text:

0000000000000000 <vector_add>:
       0:	67 04 00 00 20 00 00 00	r4 <<= 32
       1:	bf 45 00 00 00 00 00 00	r5 = r4
       2:	c7 05 00 00 20 00 00 00	r5 s>>= 32
       3:	b7 00 00 00 01 00 00 00	r0 = 1
       4:	6d 50 0b 00 00 00 00 00	if r0 s> r5 goto +11 <LBB0_3>
       5:	b7 05 00 00 00 00 00 00	r5 = 0
       6:	77 04 00 00 20 00 00 00	r4 >>= 32

0000000000000038 <LBB0_2>:
       7:	61 20 00 00 00 00 00 00	r0 = *(u32 *)(r2 + 0)
       8:	61 36 00 00 00 00 00 00	r6 = *(u32 *)(r3 + 0)
       9:	0f 06 00 00 00 00 00 00	r6 += r0
      10:	63 61 00 00 00 00 00 00	*(u32 *)(r1 + 0) = r6
      11:	07 02 00 00 04 00 00 00	r2 += 4
      12:	07 03 00 00 04 00 00 00	r3 += 4
      13:	07 01 00 00 04 00 00 00	r1 += 4
      14:	07 05 00 00 01 00 00 00	r5 += 1
      15:	2d 54 f7 ff 00 00 00 00	if r4 > r5 goto -9 <LBB0_2>

0000000000000080 <LBB0_3>:
      16:	95 00 00 00 00 00 00 00	exit

0000000000000088 <bpf_prog>:
      17:	b7 00 00 00 18 00 00 00	r0 = 24
      18:	95 00 00 00 00 00 00 00	exit
